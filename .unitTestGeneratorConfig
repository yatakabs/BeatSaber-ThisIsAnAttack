[GenerationOptions]
FrameworkType=XUnit
MockingFrameworkType=NSubstitute
AllowGenerationWithoutTargetProject=False
TestProjectNaming={0}.Tests
TestFileNaming={0}Tests
TestTypeNaming={0}Tests
UseFluentAssertions=False
UseShouldly=True
UseAutoFixture=True
AutoDetectFrameworkTypes=True
EmitUsingsOutsideNamespace=True
PartialGenerationAllowed=True
EmitTestsForInternals=False
EmitSubclassForProtectedMethods=True
AutomaticallyConfigureMocks=True
ArrangeComment=Arrange
ActComment=Act
AssertComment=Assert
UserInterfaceMode=WhenTargetNotFound
FallbackTargetFinding=TypeInCorrectNamespace
PrefixFieldReferencesWithThis=True
EmitXmlDocumentation=False
UseAutoFixtureForMocking=True
UseMockBehaviorStrict=False
CreateTargetAssets=True
TestTypeBaseClass=
TestTypeBaseClassNamespace=
GenerateFileScopedNamespaces=True
PlaceSystemUsingDirectivesFirst=True
UseFieldForAutoFixture=True
SkipInternalTypesOnMultipleGeneration=False
DefaultFailureMessage=Create or modify test
EmitMultilinePocoInitializers=Fales
UseFieldsForConstructorParameterTests=False

[NamingOptions]
CanCallNamingPattern=Test{memberName}Success
CanConstructNamingPattern=TestConstructSuccess
CannotConstructWithNullNamingPattern=TestConstructWithNull{parameterName}Failure
CannotConstructWithInvalidNamingPattern=TestConstructWithInvalid{parameterName}Failure
CanInitializeNamingPattern=TestInitializeSuccess
CannotInitializeWithNullNamingPattern=TestInitializeWithNull{memberName}Failure
CannotInitializeWithInvalidNamingPattern=TestInitializeWithInvalid{memberName}Failure
CanGetNamingPattern=TestGet{memberName}Success
CanSetAndGetNamingPattern=TestSetAndGet{memberName}Success
CanSetNamingPattern=TestSet{memberName}Success
ImplementsIEnumerableNamingPattern=TestImplementsIEnumerable{typeParameters}
ImplementsIComparableNamingPattern=TestImplementsIComparable{typeParameters}
ImplementsIEquatableNamingPattern=TestImplementsIEquatable{typeParameters}
PerformsMappingNamingPattern=Test{memberName}PerformsMappingCorrectly
CannotCallWithNullNamingPattern=Test{memberName}FailureWithNull{parameterName}
CannotCallWithInvalidNamingPattern=Test{memberName}FailureWithInvalid{parameterName}
CanCallOperatorNamingPattern=Test{memberName}OperatorSuccess
CannotCallOperatorWithNullNamingPattern=Test{memberName}OperatorFailureWithNull{parameterName}
IsInitializedCorrectlyNamingPattern=Test{memberName}IsInitializedCorrectly
TargetFieldName=testClass
DependencyFieldName={parameterName:camel}
MockDependencyFieldName=
AutoFixtureFieldName=fixture
ForceAsyncSuffix=False

[StrategyOptions]
ConstructorChecksAreEnabled=True
InitializerChecksAreEnabled=True
ConstructorParameterChecksAreEnabled=False
InitializerPropertyChecksAreEnabled=True
MethodCallChecksAreEnabled=True
MappingMethodChecksAreEnabled=True
MethodParameterChecksAreEnabled=False
IndexerChecksAreEnabled=True
PropertyChecksAreEnabled=True
InitializedPropertyChecksAreEnabled=True
OperatorChecksAreEnabled=True
OperatorParameterChecksAreEnabled=False
InterfaceImplementationChecksAreEnabled=True
